// Code generated by mockery v2.28.1. DO NOT EDIT.

package mocks

import (
	context "context"

	domain "github.com/apm-dev/eth_getBalance-proxy/src/domain"
	mock "github.com/stretchr/testify/mock"
)

// RpcProxyService is an autogenerated mock type for the RpcProxyService type
type RpcProxyService struct {
	mock.Mock
}

// SendRequest provides a mock function with given fields: c, blockchain, req
func (_m *RpcProxyService) SendRequest(c context.Context, blockchain string, req *domain.JsonRpcRequest) (*domain.JsonRpcResponse, error) {
	ret := _m.Called(c, blockchain, req)

	var r0 *domain.JsonRpcResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string, *domain.JsonRpcRequest) (*domain.JsonRpcResponse, error)); ok {
		return rf(c, blockchain, req)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string, *domain.JsonRpcRequest) *domain.JsonRpcResponse); ok {
		r0 = rf(c, blockchain, req)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.JsonRpcResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, string, *domain.JsonRpcRequest) error); ok {
		r1 = rf(c, blockchain, req)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewRpcProxyService interface {
	mock.TestingT
	Cleanup(func())
}

// NewRpcProxyService creates a new instance of RpcProxyService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRpcProxyService(t mockConstructorTestingTNewRpcProxyService) *RpcProxyService {
	mock := &RpcProxyService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
